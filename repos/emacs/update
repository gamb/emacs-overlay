#!/usr/bin/env nix-shell
#! nix-shell -i bash -p curl xmlstarlet nix coreutils
set -euxo pipefail

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
cd $SCRIPTPATH

function update_repo() {
    owner=$1
    repo=$2
    branch=$3
    output_branch=${4:-$(echo $branch | sed s/"\/"/"_"/)}
    echo $repo

    # Get relevant data (commit id and timestamp) for the latest commit
    commit_data=$(curl "https://github.com/$owner/$repo/commits/$branch.atom" | xmlstarlet sel -N atom="http://www.w3.org/2005/Atom" -t -m /atom:feed/atom:entry -v "concat(atom:id,'/',atom:updated)" -n | head -n 1)

    commit_sha=$(echo $commit_data | cut -d '/' -f 2)

    prefetched=$(nix-prefetch-url --print-path --unpack "https://github.com/$owner/$repo/archive/${commit_sha}.tar.gz")

    digest=$(echo ${prefetched} | cut -d" " -f 1)
    path=$(echo ${prefetched} | cut -d" " -f 2)

    # Extract version from Emacs README
    version=$(cat ${path}/README | grep -Po "This directory tree holds version \K[\d\.]+")

    echo "{\"rev\": \"${commit_sha}\", \"sha256\": \"${digest}\", \"version\": \"${version}\"}" > $repo-$output_branch.json
}

function update_release () {
    owner=$1
    repo=$2
    branch=$(curl "https://github.com/$owner/$repo/releases.atom" | xmlstarlet sel -N atom="http://www.w3.org/2005/Atom" -t -m /atom:feed/atom:entry -v "concat('',atom:title)" -n | egrep -o '^[^:]+' | head -n 1)
    output_branch=$3

    update_repo $owner $repo $branch $output_branch
}

update_repo emacs-mirror emacs master
update_repo emacs-mirror emacs feature/native-comp
update_release emacs-mirror emacs unstable

nix-build --no-out-link --show-trace ./test.nix
